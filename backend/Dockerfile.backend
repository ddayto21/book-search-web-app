# syntax=docker/dockerfile:1

# Use a smaller base image (test for compatibility)
FROM python:3.10-alpine

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=on \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100

# Install system dependencies (combined for fewer layers)
RUN apk add --no-cache \
    build-base \
    python3-dev \
    libffi-dev \
    openblas-dev \
    lapack-dev && \
    rm -rf /var/cache/apk/*

# Set the working directory
WORKDIR /code

# Copy only dependency files first for caching
COPY requirements.txt /code/

# Install Python dependencies efficiently
RUN pip install --no-cache-dir cython numpy blis==1.0.0 && \
    pip install --no-cache-dir -r /code/requirements.txt

# Copy application code
COPY ./app /code/app

# Clean up unnecessary files
RUN find /code/app -type d -name "__pycache__" -exec rm -r {} + && \
    rm -rf /code/app/.pytest_cache /code/app/.vscode /code/app/.git /code/ecs /ecs

# Expose port
EXPOSE 8000

# Run the app
CMD ["fastapi", "run", "app/main.py", "--port", "8000"]