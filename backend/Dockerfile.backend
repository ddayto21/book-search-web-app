# syntax=docker/dockerfile:1

FROM python:3.10-slim

# 2) Set environment variables to optimize pip behavior and fix BLIS build on ARM
ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    BLIS_ARCH=generic

# 3) Install system dependencies (added extra libraries for building numeric libraries)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    gcc \
    g++ \
    make \
    python3-dev \
    libffi-dev \
    libopenblas-dev \
    liblapack-dev \
    pkg-config \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# 4) Set the working directory inside the container
WORKDIR /code

# 5) Copy only dependency files first for Docker caching
COPY requirements.txt /code/requirements.txt

# 6) Upgrade pip, setuptools, and wheel
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# 7) Install base dependencies (cython and numpy)
RUN pip install --no-cache-dir cython numpy

# 8) Pre-install a compatible version of blis to avoid build errors during spaCy installation
RUN pip install --no-cache-dir blis==1.0.0  

# 10) Install the remaining dependencies from requirements.txt
RUN pip install -r /code/requirements.txt

# 11) Copy the rest of the application code
COPY ./app /code/app

# 12) Remove unnecessary local/dev files
RUN rm -rf /code/app/__pycache__ \
    && rm -rf /code/app/.pytest_cache \
    && rm -rf /code/app/.vscode \
    && rm -rf /code/app/.git \
    && rm -rf /code/ecs \
    && rm -rf /ecs

# 13) Expose port 8000 for FastAPI
EXPOSE 8000

# 14) Set the entrypoint to run FastAPI
CMD ["fastapi", "run", "app/main.py", "--port", "8000"]