name: Deploy to AWS Amplify

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**"
  pull_request:
    branches:
      - main
    paths:
      - "frontend/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install AWS CLI
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # Step 4: Deploy to AWS Amplify with error handling
      - name: Trigger AWS Amplify deployment
        run: |
          set +e
          # Attempt the start-job command and capture output
          output=$(aws amplify start-job \
            --app-id ${{ secrets.AWS_AMPLIFY_APP_ID }} \
            --branch-name main \
            --job-type RELEASE 2>&1)
          status=$?
          set -e

          # If the command failed, check if it's because a job is already running
          if [ $status -ne 0 ]; then
            echo "$output"
            # Look for LimitExceededException in the output
            if echo "$output" | grep -q "LimitExceededException"; then
              echo "A pending or running job already exists for this branch. Skipping new deployment."
              exit 0
            else
              exit $status
            fi
          fi

      # You can add more steps if needed, e.g. notify a slack channel, etc.